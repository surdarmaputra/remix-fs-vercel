{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/brosur/Learnings/remix/remix-fs-vercel/app/root.tsx", "/home/brosur/Learnings/remix/remix-fs-vercel/app/routes/index.tsx", "../app/services/post.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport type { Post } from \"~/services/post.server\";\nimport { getPosts } from \"~/services/post.server\";\n\ninterface LoaderData {\n  posts: Post[];\n}\n\nexport const loader: LoaderFunction = async () => {\n  const posts = await getPosts();\n  return {posts};\n}\n\nexport default function Index() {\n  const { posts} = useLoaderData<LoaderData>()\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>Posts</h1>\n      {posts.map(({ title, content }) => (\n        <div key={title}>\n          <div>{title}</div>\n          <div>{content}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n", "import fs from 'fs/promises';\nimport path from 'path';\n\nconst postsPath = path.join(__dirname, '../posts');\n\nexport interface Post {\n  title: string;\n  content: string;\n}\n\n\nexport async function getPosts(): Promise<Post[]> {\n  let files: string[];\n\n  try {\n    files = await fs.readdir(postsPath);\n  } catch (error) {\n    files = [];\n  }\n\n  const posts = await Promise.all(\n    files.map(async (fileName) => {\n      const fileContent = await fs.readFile(path.join(postsPath, fileName));\n      return JSON.parse(fileContent.toString());\n    }),\n  );\n\n  return posts;\n}", "export default {'version':'d01c54a0','entry':{'module':'/build/entry.client-E2VC5E2P.js','imports':['/build/_shared/chunk-7YOZ3W5H.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-AJ6IPLH3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-3YCDKTJY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D01C54A0.js'};", "\nimport * as entryServer from \"/home/brosur/Learnings/remix/remix-fs-vercel/app/entry.server.tsx\";\nimport * as route0 from \"/home/brosur/Learnings/remix/remix-fs-vercel/app/root.tsx\";\nimport * as route1 from \"/home/brosur/Learnings/remix/remix-fs-vercel/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO;AAEA,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGG,eAAe;AAC5B,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;AC3BR;AAAA;AAAA;AAAA;AAAA;AACA,oBAA8B;;;ACD9B,sBAAe;AACf,kBAAiB;AAEjB,IAAM,YAAY,oBAAK,KAAK,WAAW;AAQvC,0BAAkD;AAChD,MAAI;AAEJ,MAAI;AACF,YAAQ,MAAM,wBAAG,QAAQ;AAAA,WAClB,OAAP;AACA,YAAQ;AAAA;AAGV,QAAM,QAAQ,MAAM,QAAQ,IAC1B,MAAM,IAAI,OAAO,aAAa;AAC5B,UAAM,cAAc,MAAM,wBAAG,SAAS,oBAAK,KAAK,WAAW;AAC3D,WAAO,KAAK,MAAM,YAAY;AAAA;AAIlC,SAAO;AAAA;;;ADlBF,IAAM,SAAyB,YAAY;AAChD,QAAM,QAAQ,MAAM;AACpB,SAAO,EAAC;AAAA;AAGK,iBAAiB;AAC9B,QAAM,EAAE,UAAS;AACjB,SACE,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,YAAY,yBAAyB,YAAY;AAAA,KAC7D,oCAAC,MAAD,MAAI,UACH,MAAM,IAAI,CAAC,EAAE,OAAO,cACnB,oCAAC,OAAD;AAAA,IAAK,KAAK;AAAA,KACR,oCAAC,OAAD,MAAM,QACN,oCAAC,OAAD,MAAM;AAAA;;;AEtBhB,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACKjoB,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
